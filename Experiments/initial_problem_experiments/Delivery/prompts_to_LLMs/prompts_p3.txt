Consider this domain description:

(define (domain delivery)
  (:requirements :strips :typing)

  (:types
    agent package location - object
  )

  (:predicates
    (at ?a - agent ?l - location)
    (has ?a - agent ?p - package)
    (in ?p - package ?l - location)
    (connected ?from - location ?to - location)
    (requested ?p - package ?dest - location)
    (delivered ?p - package)
    (available ?a - agent)
  )

  (:action pick-up
    :parameters (?a - agent ?p - package ?l - location)
    :precondition (and (at ?a ?l) (in ?p ?l) (available ?a))
    :effect (and 
              (has ?a ?p)
              (not (in ?p ?l))
            )
  )

  (:action move
    :parameters (?a - agent ?from - location ?to - location)
    :precondition (and (at ?a ?from) (connected ?from ?to) (available ?a))
    :effect (and 
              (at ?a ?to)
              (not (at ?a ?from)))
  )

  (:action drop-off
    :parameters (?a - agent ?p - package ?l - location)
    :precondition (and (has ?a ?p) (at ?a ?l) (requested ?p ?l))
    :effect (and 
              (delivered ?p)
              (in ?p ?l)
              (not (has ?a ?p)))
            )
  )


And this problem associated to it:

(define (problem delivery-relay)
(:domain delivery)
(:objects
  robotA robotB - agent
  pkgX - package
  locX locY locZ - location
)
(:init
  (at robotA locX)(at robotB locZ)
  (in pkgX locX)
  (connected locX locY)(connected locY locZ)
  (requested pkgX locZ)
)
(:goal (delivered pkgX)))


The planning task is unsolvable due to an incomplete initial state description. Can you provide an alternative initial state in PDDL from which the goals are achievable? This state must not include the goals directly.