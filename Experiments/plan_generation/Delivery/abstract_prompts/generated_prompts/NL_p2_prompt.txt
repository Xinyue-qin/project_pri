Given a PDDL domain and a PDDL problem natural language description, come up with the plan associated with the problem. The domain describes the possible actions and their effects, while the problem description details the specific scenario to be solved. Do not generate anything but the correct plan.

Domain PDDL:
(define (domain delivery)
  (:requirements :strips :typing)

  (:types
    agent package location - object
  )

  (:predicates
    (at ?a - agent ?l - location)
    (has ?a - agent ?p - package)
    (in ?p - package ?l - location)
    (connected ?from - location ?to - location)
    (requested ?p - package ?dest - location)
    (delivered ?p - package)
    (available ?a - agent)
  )

  (:action pick-up
    :parameters (?a - agent ?p - package ?l - location)
    :precondition (and (at ?a ?l) (in ?p ?l) (available ?a))
    :effect (and 
              (has ?a ?p)
              (not (in ?p ?l))
            )
  )

  (:action move
    :parameters (?a - agent ?from - location ?to - location)
    :precondition (and (at ?a ?from) (connected ?from ?to) (available ?a))
    :effect (and 
              (at ?a ?to)
              (not (at ?a ?from)))
  )

  (:action drop-off
    :parameters (?a - agent ?p - package ?l - location)
    :precondition (and (has ?a ?p) (at ?a ?l) (requested ?p ?l))
    :effect (and 
              (delivered ?p)
              (in ?p ?l)
              (not (has ?a ?p)))
            )
  )

Problem description:
Initial State:
A robot is at one location with two packages at different locations that need to be delivered to different destinations through a connected path.

Goal State:
Both packages are successfully delivered to their respective requested locations.

Plan:

