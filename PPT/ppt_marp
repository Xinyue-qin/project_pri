---
marp: true
size: 4:3
---

<!-- ------------------------- -->
![bg fit](image-8.png)

<style scoped>
section {
  font-family: Calibri;
  font-size: 25px
}
</style>
<!-- ------------------------- -->
1. Syntax Error: The model produced syntactically invalid PDDL. This PDDL cannot be parsed to evaluate an action reconstruction error. Subclasses (in precedence order): 
   
   (1) <u>No PDDL (NoPDDL)</u>: Model did not output any PDDL, 
   
   (2) <u>Parenthesis Mismatch(PError)</u>: issues regarding the matching parenthesis in the PDDL 
   
   (3) <u>Unexpected Token (UToken)</u>: The PDDL parser failed after finding an unexpected token.

----
<!-- ------------------------- -->
![bg fit](image-8.png)

<style scoped>
section {
  font-family: Calibri;
  font-size: 25px
}
</style>
<!-- ------------------------- -->
2. Semantic Error: The model produced syntactically valid PDDL, but the PDDL doesn’t integrate with the intended problems. Subclasses:
   
   (1) <u>Type Error (TError)</u>: The model produced an unexpected type 
   
   (2) <u>Predicate Argument Error (PAError)</u>: the wrong number of variables were passed to a predicate 
   
   (3) <u>Wrong Action Name (NError)</u>: the name of the action is wrong 
   
   (4) <u>Bad Precondition (BPError)</u>: PDDL STRIPS does not allow
negated preconditions, but one is present. 

---
<!-- ------------------------- -->
![bg fit](image-8.png)

<style scoped>
section {
  font-family: Calibri;
  font-size: 25px
}
</style>
<!-- ------------------------- -->

3. Different Domain: The model produced syntactically valid PDDL that integrates with the original domain, but the underlying domains are different by way of the domain equivalence heuristic. The behavior of the actions is not as intended, plans from the original domain cannot be applied in the new domain and vice versa. Subclasses:
   
   (1) <u>No Plans Found (NoPlan)</u>: No plans were able to be found on problems in the new domain 
   
   (2) <u>New Plan Application Error (NPApp)</u>: Could not apply a new plan to the original domain 
   
   (3) <u>Original Plan Application Error (OPApp)</u>: The original plan could not be applied to the new domain.
   
---
<!-- ------------------------- -->
![bg fit](image-8.png)

<style scoped>
section {
  font-family: Calibri;
  font-size: 25px
}
</style>
<!-- ------------------------- -->

4. (Heuristically) Equivalent Domain: The model <u>produced syntactically valid PDDL</u> that integrates with the desired domain under the domain equivalence heuristic, plans from the original domain can be applied in the new domain and vice versa.

------

<!-- -->
![bg fit](image-8.png)
<style scoped>
section {
  font-family: Calibri;
  font-size: 15px
}
</style>
<!-- -->

## Gemma3:1b -- Action Generation Performance regarding Blocksworld Problem 1
Output:
```pddl
activate(robot_arm)
    where:
        robot_arm = {
            “arm-empty” = true
            “holding ?x - block” = true
            “clear ?x - block” = true
            “on ?x - block ?y - block” = true
            “on-table ?x - block” = true
        }
```
**Explanation:**
*   `activate(robot_arm)`:  This indicates that the action is being performed by a robot arm.
*   `where:`:  This section defines the specific robot arm.
*   `robot_arm = { ... }`:  This defines the state of the robot arm, specifying the attributes:
    *   `“arm-empty” = true`: The robot arm is empty.
    *   `“holding ?x - block” = true`: The robot arm is holding block `?x`.
    *   `“clear ?x - block” = true`: The robot arm is clear block `?x`.
    *   `“on ?x - block ?y - block” = true`: The robot arm is on block `?x` at block `?y`.
    *   `“on-table ?x - block” = true`: The robot arm is on the table at block `?x`.
This PDDL representation accurately captures the actions and their preconditions based on the provided descriptions.

Result Classes: Syntax Error -- No PDDL (NoPDDL): Gemma3: 1b model did not output any PDDL.


---

<!-- ------------------------- -->
![bg fit](image-8.png)

<style scoped>
section {
  font-family: Calibri;
  font-size: 22px
}
</style>
<!-- ------------------------- -->
# Action Reconstruction Error (ARE) 
<small>ARE is a measure of how different two action schema $a$, $a' \in A$ are. We define the action reconstruction error as the size of the difference of predicates in the precondition and effect between $a$ and $a'$:

$$\begin{align}
ARE(a,a') &= |pre(a) △ pre(a')|+ \\
&=|add(a) △add(a')|+\\
&=|del(a) △del(a')|
\end{align}$$
where $A△B$ is the symmetric difference $(A/B)∪(B/A)$. 
This metric is useful for understanding the distribution of how close is the output domain (from the model) to the original domains. However, we claim that this metric is not a good measurement of actual domain quality. It does not take into account the fact that <u>preconditions and effects can be added or removed from an action without changing the meaning of the action at all</u>, for example, adding a static predicate from a precondition as an effect. To remedy this, we propose an alternative metric based on how usable the domain is for planning.</small>

---

name | 111 | 222 | 333 | 444
:-: | :-: | :-: | :-: | :-:
aaa | bbb | ccc | ddd | eee| 
fff | ggg| hhh | iii | 000|